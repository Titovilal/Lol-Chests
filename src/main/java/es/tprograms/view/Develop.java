package es.tprograms.view;

import es.tprograms.model.NoScalingIcon;
import com.formdev.flatlaf.FlatDarkLaf;
import es.tprograms.dao.DataDao;
import java.awt.GridLayout;
import java.io.IOException;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

public final class Develop extends javax.swing.JFrame {

    public Develop() {
        FlatDarkLaf.setup();
        initComponents();
        this.setLocationRelativeTo(null);
    }

    private static void prueba(Map<Integer, String> championNames) {
        SubPanelChampions spc;
        int columns = 7;
        int rows = (championNames.size() / columns) + 1;
        panelChampions.setLayout(new GridLayout(rows, columns));

        for (Map.Entry<Integer, String> entry : championNames.entrySet()) {
            spc = new SubPanelChampions();
            NoScalingIcon icon = new NoScalingIcon(new ImageIcon("resources/champions/" + entry.getValue() + ".png"));

            spc.jLabel1.setIcon(icon);
            spc.jLabel2.setText(entry.getValue());
            panelChampions.add(spc);
        }
        scrollChampions.getVerticalScrollBar().setUnitIncrement(12);
        scrollChampions.setViewportView(panelChampions);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelContenedor = new javax.swing.JPanel();
        scrollChampions = new javax.swing.JScrollPane();
        panelChampions = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelContenedor.setBackground(new java.awt.Color(43, 43, 43));
        panelContenedor.setPreferredSize(new java.awt.Dimension(167, 57));

        scrollChampions.setBackground(new java.awt.Color(51, 51, 51));
        scrollChampions.setBorder(null);

        javax.swing.GroupLayout panelChampionsLayout = new javax.swing.GroupLayout(panelChampions);
        panelChampions.setLayout(panelChampionsLayout);
        panelChampionsLayout.setHorizontalGroup(
            panelChampionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 906, Short.MAX_VALUE)
        );
        panelChampionsLayout.setVerticalGroup(
            panelChampionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 541, Short.MAX_VALUE)
        );

        scrollChampions.setViewportView(panelChampions);

        javax.swing.GroupLayout panelContenedorLayout = new javax.swing.GroupLayout(panelContenedor);
        panelContenedor.setLayout(panelContenedorLayout);
        panelContenedorLayout.setHorizontalGroup(
            panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollChampions)
        );
        panelContenedorLayout.setVerticalGroup(
            panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollChampions)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, 906, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            Develop d = new Develop();

            try {
                prueba(DataDao.getChampionsMap(DataDao.getLatestVersion()));
            }
            catch (IOException ex) {
                Logger.getLogger(Develop.class.getName()).log(Level.SEVERE, null, ex);
            }
//            prueba();
            d.setVisible(true);

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JPanel panelChampions;
    private javax.swing.JPanel panelContenedor;
    private static javax.swing.JScrollPane scrollChampions;
    // End of variables declaration//GEN-END:variables
}
